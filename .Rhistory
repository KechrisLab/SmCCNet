library("RUVSeq")
RUVg
showMethods(RUVg)
?"RUVg"
sessionInfo()
sessionInfo()
.libPaths()
search()
loadedNamespaces()
requireNamespace("cplm")
requireNamespace("lme4")
install.packages("cplm"
)
install.packages("lme4", repos="http://cran.r-project.org")
install.packages("pbapply", repos="http://cran.r-project.org")
install.packages("R2admb")
install.packages("glmmADMB",
repos=c("http://glmmadmb.r-forge.r-project.org/repos",
getOption("repos")),
type="source")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
loadedNamespaces()
requireNamespace("lme4", quietly = TRUE)
loadedNamespaces()
?getME
getME
attachNamespace("lme4")
getME
?getME
install.packages("cplm")
loadedNamespaces()
install.packages("MASS")
install.packages("MASS")
loadedNamespaces()
?requireNamespace
source("Documents/CUAnschutz/LXS/Heritability/HeriToolsV12.R")
source("Documents/CUAnschutz/LXS/Heritability/HeriToolsV11.R")
install.packages(DESeq)
install.packages("DESeq")
source("Documents/CUAnschutz/LXS/Heritability/HeriToolsV11.R")
library(DESeq)
install.packages("DESeq")
source("Documents/heritseq/HeriToolsV12.R")
source("Documents/heritseq/R/HeriToolsV12.R")
rm(list = ls())
source("Documents/CUAnschutz/LXS/Heritability/HeriToolsV11.R")
load("Documents/heritseq/data/heritseq_example.RData")
source("Documents/CUAnschutz/LXS/Heritability/HeriToolsV11.R")
```
source("Documents/CUAnschutz/LXS/Heritability/HeriToolsV11.R")
?"DESeqDataSetFromMatrix"
?estimateSizeFactors
?estimateSizeDispersions
?estimateDispersions
?assay
?voom
library(limma)
install.packages("limma")
??voom
??limma
source("https://bioconductor.org/biocLite.R")
biocLite("limma")
?voom
library(limma)
?voom
install.packages("psych")
library(psych)
?pairs.panels
install.packages("cplm")
install.packages("cplm")
traceback()
.libPaths()
?require
source("Documents/CUAnschutz/heritseq/HeriToolsV13.R")
source("Documents/heritseq/HeriToolsV13.R")
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
source("Documents/heritseq/HeriToolsV13.R")
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
loadedNamespaces()
library(cplm)
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
traceback()
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
source("Documents/heritseq/HeriToolsV13.R")
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
traceback()
loadedNamespaces()
source("Documents/heritseq/HeriToolsV13.R")
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
source("Documents/heritseq/HeriToolsV13.R")
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
source("Documents/heritseq/HeriToolsV13.R")
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
source("Documents/heritseq/HeriToolsV13.R")
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
?cpglm
?cpglmm
library(cplm)
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
?mapply
source("Documents/CUAnschutz/LXS/Heritability/HeriToolsV11.R")
result.cp <- fitCPMM(CountMatrix = simData[1,], Strains = strains)
result.cp <- fitCPMM(CountMatrix = simData[1:2,], Strains = strains)
result.cp
result.cp <- fitCPMM(CountMatrix = simData, Strains = strains)
vpc.cp <- computeAllCPVPC(para = result.cp[[1]])
result.nb <- fitNBMM(CountMatrix = simData, Strains = strains)
vpc.nb <- computeAllNBVPC(para = result.nb[[1]])
cds <- DESeqDataSetFromMatrix(countData = round(simData),
colData = data.frame(strain = strains),
design = formula(~strain))
cds <- estimateSizeFactors(object = cds)
cds <- estimateDispersions(object = cds, fitType = "local")
vsd <- varianceStabilizingTransformation(cds, fitType = "local")
simData.vst <- assay(x = vsd)
vpc.vst <- computeAlllmerVPC(CountMatrix = simData.vst, Strains = strains)[[1]]
library(limma)
voomed.librarySize <- voom(counts = simData,
normlize.method = "scale",
lib.size = sizeFactors(cds))
simData.voom <- voomed.librarySize$E
weights.voom <- voomed.librarySize$weights
vpc.voom <- computeAlllmerVPC(CountMatrix = simData.voom,
Strains = strains,
PriorWeights = weights.voom)[[1]]
library(psych)
h2 <- cbind(vpc.nb, vpc.cp, vpc.vst, vpc.voom)
colnames(h2) <- c("NB", "CP", "VST", "Voom")
pairs.panels(x = h2, main = "Compare VPC")
save(h2, file = "heritexample_result.Rdata")
save(h2, file = "Documents/heritseq/heritexample_result.Rdata")
wd()
getwd()
sessionInfo()
rm(list = ls())
install.packages("HeritSeq")
library(HeritSeq)
install.packages("DGCA")
library(DGCA)
head(darmanis)
dim(darmanis)
sessionInfo()
rm(list = ls())
install.packages("RWeka")
install.packages("rJava",, "http//rforge.net/", type = "source")
install.packages("rJava")
library(rJava)
install.packages("RWeka")
library(RWekajars)
?J48
install.packages("RWeka")
?J48
library(RWekajars)
?J48
library(RWeka)
sessionInfo()
install.packags("RWeka")
install.packages("RWeka")
install.packages("RWeka")
install.packages("RWeka")
install.packages("rJava", type = "source")
install.packages("rJava", type = "source")
install.packages("RWeka")
sessionInfo()
dyn.load(paste0(system2('/usr/libexec/java_home', stdout = TRUE), '/jre/lib/server/libjvm.dylib'))
dyn.load(paste0(system2('~/usr/libexec/java_home', stdout = TRUE), '/jre/lib/server/libjvm.dylib'))
library(rJava)
sessionInfo()
options(java.home="/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk")
Sys.setenv(DYLD_FALLBACK_LIBRARY_PATH="/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/server/")
install.packages("rJava", ,
"http://www.rforge.net/")
install.packages("rJava", , "http://www.rforge.net/")
sessionInfo()
library(rJava)
.jinit()
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
library(ShrinkBayes)
vignette("ShrinkBayes")
vignette("shrinkBayes")
data(mirseqnorm)
library(ShrinkBayes)
install.packages("INLA")
install.packages("INLA")
source("http://www.math.ntnu.no/inla/givemeINLA.R")
install.packages(pkgs = "INLA", lib = lib, repos = repo, dependencies = TRUE)
install.packages(c("sp","pixmap", "snowfall", "VGAM", "mclust", "logcondens", "Iso","XML","rgl"), repos="http://cran.r-project.org")
source("http://www.math.ntnu.no/inla/givemeINLA.R")
install.packages(pkgs = "INLA", lib = lib, repos = repo, dependencies = TRUE)
install.packages("repo")
install.packages(pkgs = "INLA", lib = lib, repos = repo, dependencies = TRUE)
library("repo")
install.packages(pkgs = "INLA", lib = lib, repos = repo, dependencies = TRUE)
install.packages("repo")
install.packages("repo")
library(repo)
install.packages(pkgs = "INLA", lib = lib, repos = repo, dependencies = TRUE)
inla.upgrade()
library("devtools") install_github("markvdwiel/ShrinkBayes")
library("devtools"); install_github("markvdwiel/ShrinkBayes")
library(ShrinkBayes)
data(mirseqnorm)
head(mirseqnorm[,1:10])
??INLA
library(INLA)
install.packages(
"INLA"
)
install.packages("INLA")
install.packages("INLA", repos="https://www.math.ntnu.no/inla/R/stable")
install.packages("INLA", repos = "https://www.math.ntnu.no/inla/R/stable")
install.packages("ShrinkBayes")
library("devtools"); install_github("markvdwiel/ShrinkBayes")
source("http://www.math.ntnu.no/inla/givemeINLA.R")
install.packages(pkgs = "INLA", lib = lib, repos = repo, dependencies = TRUE)
install.packages("INLA", repos = "https://www.math.ntnu.no/inla/R/stable")
install.packages(c("sp","pixmap", "snowfall", "VGAM", "mclust", "logcondens", "Iso","XML","rgl"), repos="http://cran.r-project.org")
library("devtools"); install_github("markvdwiel/ShrinkBayes")
library(ShrinkBayes)
data(mirseqnorm)
head(mirseqnorm[,1:10])
data(designmirseq)
head(designmirseq)
library(ShrinkBayes)
library(INLA)
require(INLA)
sessionInfo()
install.packages("INLA", repos = "https://www.math.ntnu.no/inla/R/stable")
install.packages("INLA", repos = "https://www.math.ntnu.no/inla/R/stable")
library(INLA)
options(repos = c(getOption("repos"), INLA="https://www.math.ntnu.no/inla/R/testing"))
update.packages("INLA")
library(INLA)
install.packages(c("sp","pixmap", "snowfall", "VGAM", "mclust", "logcondens", "Iso","XML","rgl"), repos="http://cran.r-project.org")
install.packages(c("sp", "pixmap", "snowfall", "VGAM", "mclust", "logcondens", "Iso", "XML", "rgl"), repos = "http://cran.r-project.org")
source("http://www.math.ntnu.no/inla/givemeINLA.R")
install.packages(pkgs = "INLA", lib = lib, repos = repo, dependencies = TRUE)
repo="https://www.math.ntnu.no/inla/R/stable"
install.packages(pkgs = "INLA", lib = lib, repos = repo, dependencies = TRUE)
install.packages(pkgs = "INLA",  repos = repo, dependencies = TRUE)
install.packages(pkgs = "INLA", repos = repo, dependencies = TRUE)
install.packages("Rgraphviz")
source("https://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
biocLite("rgdal")
install.packages("INLA", repos = "https://www.math.ntnu.no/inla/R/stable")
install.packages("INLA", repos = "https://www.math.ntnu.no/inla/R/stable")
library("devtools"); install_github("markvdwiel/ShrinkBayes")
library(ShrinkBayes)
attachNamespace(INLA)
attachNamespace("INLA")
sessionInfo()
library(ShrinkBayes)
install.packages(c("sp","pixmap", "snowfall", "VGAM", "mclust", "logcondens", "Iso","XML","rgl"), repos="http://cran.r-project.org")
install.packages(c("sp", "pixmap", "snowfall", "VGAM", "mclust", "logcondens", "Iso", "XML", "rgl"), repos = "http://cran.r-project.org")
install.packages("sp")
install.packages("pixmap")
sessionInfo()
source("http://www.math.ntnu.no/inla/givemeINLA.R")
install.packages(pkgs = "INLA", lib = lib, repos = repo, dependencies = TRUE)
install.packages(pkgs = "INLA", repos = repo, dependencies = TRUE)
install.packages(pkgs = "INLA", repos = repo, dependencies = TRUE)
library(devtools)
install_github("markvdwiel/ShrinkBayes")
library(ShrinkBayes)
sessionInfo()
library(INLA)
attachNamespace("INLA")
library(sp)
library(pixmap)
attachNamespace("INLA")
sessionInfo()
library(INLA)
sessionInfo()
uo2015
cor
??cor
?cor
sessionInfo()
source("https://bioconductor.org/biocLite.R")
biocLite("multiMiR")
library(multiMiR)
sessionInfo()
sqrt(7975*.7)*.03
sqrt(555*.9)*.03
sqrt(555*.9)*.05
.003187/sqrt(4)
.03415/sqrt(2)
.0001292/sqrt(2)
.000155/sqrt(2)
.04539/sqrt(8)
.03687/sqrt(8)
.03168/sqrt(8)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/Documents/CUAnschutz/LXS/SCCA/HeritSCCA/')
library(knitr)
library(biomaRt)
library(RColorBrewer)
library(edgeR)
library(MCMCpack)
source('~/Documents/CUAnschutz/LXS/SCCA/SCCAdiagTools.R')
source("~/Documents/CUAnschutz/LXS/SCCA/SmCCNetsource.R")
source("~/Documents/CUAnschutz/LXS/SCCA/ModifiedPMA.R")
K <- 5
pheno <- ""
for(mainDir in c("MediationSim/TCGANaive/")){
for(i in 5:6){
phenoDir <- paste0(mainDir, "Sim", i, "/")
dataF <- paste0(phenoDir, "Data.Rdata")
load(dataF)
AbarLabel <- c(paste0("G-", 1:ncol(x1)), paste0("miR-", 1:ncol(x2)), "Pheno")
source("runSCCAfromCV.R")
}
}
12/1182
11/593
3/342
3/242
3/83
3/21
## get packages installed
packs = as.data.frame(installed.packages(.libPaths()[1]), stringsAsFactors = F)
## and now re-install install packages using install.packages()
install.packages(packs$Package)
install.packages(packs$Package)
install.packages(packs$Package)
install.packages(packs$Package)
install.packages(packs$Package)
install.packages(packs$Package)
install.packages(packs$Package)
install.packages(packs$Package)
install.packages(packs$Package)
install.packages(packs$Package)
install.packages(packs$Package)
sessionInfo(0)
sessionInfo()
library(PMA)
install.pakcage("PMA")
install.package("PMA")
install.packages("PMA")
install.packages("impute")
source("https://bioconductor.org/biocLite.R")
biocLite("impute")
install.packages("impute")
install.packages("PMA")
library(pbapply)
install.packages("pbapply")
install.packages("igraph")
library(PMA)
library(Matrix)
library(pbapply)
library(igraph)
sessionInfo()
devtools::install_github("KechrisLab/SmCCNet")
X1
?install_github
library(SmCCNet)
X1
dim(X1)
getAbar
data(X1, X2, Y)
data(SmCCNet::X1)
?CCA
data(ExampleData)
load("ExampleData.Rdata")
devtools::use_data(X1, SmCCNet)
devtools::use_data(X1, ./SmCCNet)
devtools::document()
rm(list = ls(0))
rm(list = ls())
library(devtools)
devtools::document()
setwd("~/Documents/GitHub")
devtools::document()
setwd("~/Documents/GitHub/SmCCNet")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
ncol(NULL)
devtools::document()
u <- matrix(c(rep(1,25),rep(0,75)),ncol=1)
v1 <- matrix(c(rep(1,50),rep(0,450)),ncol=1)
v2 <- matrix(c(rep(0,50),rep(1,50),rep(0,900)),ncol=1)
x <- u%*%t(v1) + matrix(rnorm(100*500),ncol=500)
z <- u%*%t(v2) + matrix(rnorm(100*1000),ncol=1000)
# Can run CCA with default settings, and can get e.g. 3 components
out <- CCA(x,z,typex="standard",typez="standard",K=3)
library(PMA)
u <- matrix(c(rep(1,25),rep(0,75)),ncol=1)
v1 <- matrix(c(rep(1,50),rep(0,450)),ncol=1)
v2 <- matrix(c(rep(0,50),rep(1,50),rep(0,900)),ncol=1)
x <- u%*%t(v1) + matrix(rnorm(100*500),ncol=500)
z <- u%*%t(v2) + matrix(rnorm(100*1000),ncol=1000)
# Can run CCA with default settings, and can get e.g. 3 components
out <- CCA(x,z,typex="standard",typez="standard",K=3)
ncol(NULL)
is.null(ncol(NULL))
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
matrix(rnorm(6), nrow = 3)
Ws <- apply(w, 2, function(x)return(x/sqrt(sum(x^2))))
Ws <- apply(w, 2, function(x)return(x/sqrt(sum(x^2))))
w <- matrix(rnorm(6), nrow = 3)
Ws <- apply(w, 2, function(x)return(x/sqrt(sum(x^2))))
dim(Ws)
P1 = 3;p=5
c(paste0("Gene_", 1:P1), paste0("Mir_", 1:(p-P1)))
ws
w
scale(w)
apply(w, 2, var)
blah = scale(2)
apply(blah,2, var)
blah
blah = scale(w)
apply(blah,2, var)
apply(blah,2, mean)
blah
scale(blah)
devtools::document()
devtools::document()
rnorm(5)
devtools::document()
devtools::document()
devtools::document()
